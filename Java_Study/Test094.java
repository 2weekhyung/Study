/*=========================================================
	■■■ 배열 ■■■
	- 배열의 배열
===========================================================*/
// 배열의 배열(다차원 배열)을 활용하여
// 다음과 같은 데이터를 요소로 취하는 배열을 구성하고
// 그 결과를 출력하는 프로그램을 구현한다.

// 실행 예)
/*
A
C B
D E F
J I H G
K L M N O

계속하려면 아무 키나 누르세요...
*/
public class Test094
{
	public static void main(String[] args)
	{
		// 문제 인식
		/*
		65  X X  X X	00 01 02 03 04
		67 66 X  X X	10 11 12 13 14
		68 69 70 X  X	20 21 22 23 24
		74 73 72 71 X	30 31 32 33 34
		75 76 77 78 79	40 41 42 43 44
		*/

		int ch = 65;					// 계산에 용이 함으로 ASCII 코드 값으로 변환한 값을 int 형으로 받음
										// ※ 'A' = 65

		int[][] arr = new int[5][5];	// arr 이라는 배열을 선언

		
		for (int i = 0 ; i < arr.length ;	i++)			// 베열에 담기
		{
			for (int j = 0 ; j < arr[i].length ; j++ )
			{
				if (i==0 && j== 0)							// i 와 j가 0일 때 arr[0][0] 에 A 를 넣음
				{
					arr[i][j] = ch;
				}
				

				if (i==1 && j < 2)							// 정방향 이라면 i=1 이고 j가 0,1 일 때 arr[1][0] 에 B, arr[1][1] 에 C를 넣음
				{											// 하지만 과제에서 요구하는 것이 역방향 임으로	
					ch++;									// (1,1) 에 있던 C 가 (1,0) 으로 이동 했기 때문에 1-j를 해줌 
					arr[i][1-j] = ch;
				}

				if (i==2 && j < 3)							// i가 짝수 일 때는 정방향이니까 그대로
				{	
					ch++;
					arr[i][j] = ch;
				}
				if (i==3 && j < 4)							// i가 홀수이기 때문에 역방향으로 배열해줘야 함
				{											// 이번 규칙을 보자면 (3,3) 에 있던 J가 (3,0)으로 이동 했기 때문에 3-j를 해줌
					ch++;
					arr[i][3-j] = ch;
				}
				if (i==4 && j < 5)
				{	
					ch++;
					arr[i][j] = ch;
				}
				
			}
		}

		// 배열 출력 구문
		for (int i=0 ; i < arr.length ; i++ )
		{
			for (int j=0 ; j < arr[i].length ; j++ )
			{
				System.out.printf("%3c", (char)arr[i][j]);		//int 형 배열을 char 로 변환 후 출력해야 원하는 배열을 얻을 수 있다
			}

			System.out.println();
		}


	}
}

// 실행 결과

/*
  A
  C  B
  D  E  F
  J  I  H  G
  K  L  M  N  O
계속하려면 아무 키나 누르십시오 . . .
*/