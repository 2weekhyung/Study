/*=========================================
	■■■ 클래스와 인스턴스 ■■■
	- 생성자(Constructor)
	- 메소드 오버로딩
=========================================*/

public class Test076
{
	int x;

	// ※ 생성자의 이름은 항상 예외없이 클래스의 이름과 동일해야 하며
	//	  필요한 경우 인수를 받아들이는 것도 가능하다.(인수는 매개변수에 담기는 값)
	//    같은 이름의 메소드를 정의하는 중복정의가 가능하지만
	//    리턴값(반환값)은 가질 수 없다.

	// ※ 생성자는 다른 일반 메소드처럼 호출될 수 없고,
	//    『new』 연산자를 이용하여 객체를 생성하기 위해 호출되며,
	//    각 클래스의 인스턴스인 객체를 생성한 후에
	//    생성된 객체의 멤버를 초기화 시키는 작업을 수행하게 된다.



	// 생성자
	Test076()		
	{	
		// ※ 생성자 내부에서 다른 생성자를 호출하는 것은 가능하다. 다른 일반 메소드처럼....
		//    하지만, 생성자 내부에서 가장 먼저 실행되어야 한다. check~!!!
		//Test076(200);
		this(200);
		//-- 생성자 내부에서 또다른 생성자를 호출하는 구문
		
		this.x=10;
		System.out.println("인자 없는 생성자"); 
		System.out.println("Test076이 갖고있는 x : " + this.x);

		
	}
	
	// 생성자
	//Test076(int num)
	Test076(int x)
	{	
		//x = num;
		
		//x = x;	//-- 둘 다 지역변수 x

		//Test076.x = x; - 이건 다른 문법이 선점해서 불가능
		
		this.x = x;
		//   」
		// 전역변수 x

		// 논리적인 해석 → Test076.x = x;
		System.out.println("인자가 하나인 생성자");
		//System.out.println("Test076이 갖고있는 x : " + x);
		System.out.println("Test076이 갖고있는 x : " + this.x);
	}

	// 메소드의 매개변수와 전역변수가 같더라도 this.x 꼴 로 사용한다면 this.x 는 전역변수 x로 초기화 된다.

	public static void main(String[] args)
	{
		// Test076 클래스 기반 인스턴스 생성
		Test076 ob1 = new Test076(); 
		Test076 ob2 = new Test076(100);
		//--==>> 인자 없는 생성자
		//		 Test076이 갖고있는 x : 10
		//		 인자가 하나인 생성자
		//		 Test076이 갖고있는 x : 100

		System.out.println();
		System.out.println("main 에서 ob1.x :" + ob1.x);
		System.out.println("main 에서 ob2.x :" + ob2.x);

		/*
		메소드 오버로딩(overloading)이란 같은 이름의 메소드를 중복하여 정의하는 것을 의미합니다.

		자바에서는 원래 한 클래스 내에 같은 이름의 메소드를 둘 이상 가질 수 없습니다.

		하지만 매개변수의 개수나 타입을 다르게 하면, 하나의 이름으로 메소드를 작성할 수 있습니다.

		즉, 메소드 오버로딩은 서로 다른 시그니처를 갖는 여러 메소드를 같은 이름으로 정의하는 것이라고 할 수 있습니다.

		이러한 메소드 오버로딩을 사용함으로써 메소드에 사용되는 이름을 절약할 수 있습니다.
		*/

		// return 을 보면 메소드를 봐라
		// this 를 보면 class 를 봐라

		
	}
}

//실행결과

/*
인자가 하나인 생성자
Test076이 갖고있는 x : 200
인자 없는 생성자
Test076이 갖고있는 x : 10
인자가 하나인 생성자
Test076이 갖고있는 x : 100

main 에서 ob1.x :10
main 에서 ob2.x :100
계속하려면 아무 키나 누르십시오 . . .
*/